import pytest

from data_collections import mentors_unique_names, top_3_names, super_names


@pytest.mark.parametrize("mentors, expected", [
    ([
        ["Евгений Шмаргунов", "Олег Булыгин", "Дмитрий Демидов",
         "Кирилл Табельский", "Александр Ульянцев",
         "Александр Бардин", "Александр Иванов", "Антон Солонилин",
         "Максим Филипенко", "Елена Никитина",
         "Азамат Искаков", "Роман Гордиенко"],
        ["Филипп Воронов", "Анна Юшина", "Иван Бочаров",
         "Анатолий Корсаков", "Юрий Пеньков", "Илья Сухачев",
         "Иван Маркитан", "Ринат Бибиков", "Вадим Ерошевичев",
         "Тимур Сейсембаев", "Максим Батырев", "Никита Шумский",
         "Алексей Степанов", "Денис Коротков", "Антон Глушков",
         "Сергей Индюков", "Максим Воронцов", "Евгений Грязнов",
         "Константин Виролайнен", "Сергей Сердюк", "Павел Дерендяев"],
        ["Евгений Шмаргунов", "Олег Булыгин", "Александр Бардин",
         "Александр Иванов", "Кирилл Табельский",
         "Александр Ульянцев", "Роман Гордиенко", "Адилет Асканжоев",
         "Александр Шлейко", "Алена Батицкая",
         "Денис Ежков", "Владимир Чебукин", "Эдгар Нуруллин",
         "Евгений Шек", "Максим Филипенко", "Елена Никитина"],
        ["Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек",
         "Валерий Хаслер", "Татьяна Тен", "Александр Фитискин",
         "Александр Шлейко", "Алена Батицкая", "Александр Беспоясов",
         "Денис Ежков", "Николай Лопин", "Михаил Ларченко"]
        ],
        'Уникальные имена преподавателей: Адилет, Азамат, '
        'Александр, Алексей, Алена, Анатолий, Анна, Антон, '
        'Вадим, Валерий, Владимир, Денис, Дмитрий, Евгений, '
        'Елена, Иван, Илья, Кирилл, Константин, Максим, Михаил, '
        'Никита, Николай, Олег, Павел, Ринат, Роман, Сергей, Татьяна, '
        'Тимур, Филипп, Эдгар, Юрий'),
    ([], 'Уникальные имена преподавателей:'),
    ([["Евгений Шмаргунов"]], 'Уникальные имена преподавателей: Евгений')
])
def test_mentors_unique_names(mentors, expected):
    assert mentors_unique_names(mentors) == expected


@pytest.mark.parametrize("mentors, expected", [
    ([
        ["Евгений Шмаргунов", "Олег Булыгин", "Дмитрий Демидов",
         "Кирилл Табельский", "Александр Ульянцев",
         "Александр Бардин", "Александр Иванов", "Антон Солонилин",
         "Максим Филипенко", "Елена Никитина",
         "Азамат Искаков", "Роман Гордиенко"],
        ["Филипп Воронов", "Анна Юшина", "Иван Бочаров",
         "Анатолий Корсаков", "Юрий Пеньков", "Илья Сухачев",
         "Иван Маркитан", "Ринат Бибиков", "Вадим Ерошевичев",
         "Тимур Сейсембаев", "Максим Батырев", "Никита Шумский",
         "Алексей Степанов", "Денис Коротков", "Антон Глушков",
         "Сергей Индюков", "Максим Воронцов", "Евгений Грязнов",
         "Константин Виролайнен", "Сергей Сердюк", "Павел Дерендяев"],
        ["Евгений Шмаргунов", "Олег Булыгин", "Александр Бардин",
         "Александр Иванов", "Кирилл Табельский",
         "Александр Ульянцев", "Роман Гордиенко", "Адилет Асканжоев",
         "Александр Шлейко", "Алена Батицкая",
         "Денис Ежков", "Владимир Чебукин", "Эдгар Нуруллин",
         "Евгений Шек", "Максим Филипенко", "Елена Никитина"],
        ["Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек",
         "Валерий Хаслер", "Татьяна Тен", "Александр Фитискин",
         "Александр Шлейко", "Алена Батицкая", "Александр Беспоясов",
         "Денис Ежков", "Николай Лопин", "Михаил Ларченко"]
        ],
        'Александр: 10 раз(а), Евгений: 5 раз(а), Максим: 4 раз(а)')
])
def test_top_3_names(mentors, expected):
    assert top_3_names(mentors) == expected


@pytest.mark.parametrize('mentors_list,courses_list,expected', [
    ([
        ["Евгений Шмаргунов", "Олег Булыгин", "Дмитрий Демидов",
         "Кирилл Табельский", "Александр Ульянцев",
         "Александр Бардин", "Александр Иванов", "Антон Солонилин",
         "Максим Филипенко", "Елена Никитина",
         "Азамат Искаков", "Роман Гордиенко"],
        ["Филипп Воронов", "Анна Юшина", "Иван Бочаров",
         "Анатолий Корсаков", "Юрий Пеньков", "Илья Сухачев",
         "Иван Маркитан", "Ринат Бибиков", "Вадим Ерошевичев",
         "Тимур Сейсембаев", "Максим Батырев", "Никита Шумский",
         "Алексей Степанов", "Денис Коротков", "Антон Глушков",
         "Сергей Индюков", "Максим Воронцов", "Евгений Грязнов",
         "Константин Виролайнен", "Сергей Сердюк", "Павел Дерендяев"],
        ["Евгений Шмаргунов", "Олег Булыгин", "Александр Бардин",
         "Александр Иванов", "Кирилл Табельский",
         "Александр Ульянцев", "Роман Гордиенко", "Адилет Асканжоев",
         "Александр Шлейко", "Алена Батицкая",
         "Денис Ежков", "Владимир Чебукин", "Эдгар Нуруллин",
         "Евгений Шек", "Максим Филипенко", "Елена Никитина"],
        ["Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек",
         "Валерий Хаслер", "Татьяна Тен", "Александр Фитискин",
         "Александр Шлейко", "Алена Батицкая", "Александр Беспоясов",
         "Денис Ежков", "Николай Лопин", "Михаил Ларченко"]
    ],
     ["Python-разработчик с нуля", "Java-разработчик с нуля",
      "Fullstack-разработчик на Python", "Frontend-разработчик с нуля"],
     (f"На курсах 'Python-разработчик с нуля' и 'Java-разработчик с нуля' "
      f"преподают: Антон, Евгений, Максим\n"
      f"На курсах 'Python-разработчик с нуля' и 'Fullstack-разработчик на Python' "
      f"преподают: Александр, Евгений, Елена, Кирилл, Максим, Олег, Роман\n"
      f"На курсах 'Python-разработчик с нуля' и 'Frontend-разработчик с нуля' "
      f"преподают: Александр, Евгений\n"
      f"На курсах 'Java-разработчик с нуля' и 'Fullstack-разработчик на Python' "
      f"преподают: Денис, Евгений, Максим\n"
      f"На курсах 'Java-разработчик с нуля' и 'Frontend-разработчик с нуля' "
      f"преподают: Денис, Евгений\n"
      f"На курсах 'Fullstack-разработчик на Python' и 'Frontend-разработчик с нуля' "
      f"преподают: Александр, Алена, Владимир, Денис, Евгений, Эдгар"))
])
def test_super_name(mentors_list, courses_list, expected):
    assert super_names(mentors_list, courses_list) == expected
